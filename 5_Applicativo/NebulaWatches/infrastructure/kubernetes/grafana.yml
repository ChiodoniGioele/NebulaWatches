apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
          env:
            - name: GF_AUTH_ANONYMOUS_ENABLED
              value: "true"
          volumeMounts:
            - name: grafana-provisioning-datasources-volume
              mountPath: /etc/grafana/provisioning/datasources
            - name: grafana-provisioning-dashboards-volume
              mountPath: /etc/grafana/provisioning/dashboards
            - name: grafana-dashboards-volume
              mountPath: /var/lib/grafana/dashboards
          livenessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 10
      volumes:
        - name: grafana-provisioning-datasources-volume
          configMap:
            defaultMode: 420
            name: grafana-provisioning-datasources-conf
        - name: grafana-provisioning-dashboards-volume
          configMap:
            defaultMode: 420
            name: grafana-provisioning-dashboards-conf
        - name: grafana-dashboards-volume
          configMap:
            defaultMode: 420
            name: grafana-dashboards-conf
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
spec:
  selector:
    app: grafana
  ports:
    - port: 3000
      targetPort: 3000
  type: LoadBalancer


